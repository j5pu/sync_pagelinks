# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WpAuditTrail',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('operation', models.CharField(max_length=40)),
                ('user_id', models.IntegerField()),
                ('ip', models.IntegerField()),
                ('happened_at', models.DateTimeField()),
                ('item_id', models.IntegerField(null=True, blank=True)),
                ('data', models.TextField(blank=True)),
                ('title', models.CharField(max_length=100, blank=True)),
            ],
            options={
                'db_table': 'wp_audit_trail',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpCommentmeta',
            fields=[
                ('meta_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('comment_id', models.BigIntegerField()),
                ('meta_key', models.CharField(max_length=255, blank=True)),
                ('meta_value', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'wp_commentmeta',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpComments',
            fields=[
                ('comment_id', models.BigIntegerField(serialize=False, primary_key=True, db_column='comment_ID')),
                ('comment_post_id', models.BigIntegerField(db_column='comment_post_ID')),
                ('comment_author', models.TextField()),
                ('comment_author_email', models.CharField(max_length=100)),
                ('comment_author_url', models.CharField(max_length=200)),
                ('comment_author_ip', models.CharField(max_length=100, db_column='comment_author_IP')),
                ('comment_date', models.DateTimeField()),
                ('comment_date_gmt', models.DateTimeField()),
                ('comment_content', models.TextField()),
                ('comment_karma', models.IntegerField()),
                ('comment_approved', models.CharField(max_length=20)),
                ('comment_agent', models.CharField(max_length=255)),
                ('comment_type', models.CharField(max_length=20)),
                ('comment_parent', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wp_comments',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpDuplicatorPackages',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=250)),
                ('hash', models.CharField(max_length=50)),
                ('status', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('owner', models.CharField(max_length=60)),
                ('package', models.TextField()),
            ],
            options={
                'db_table': 'wp_duplicator_packages',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpLinks',
            fields=[
                ('link_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('link_url', models.CharField(max_length=255)),
                ('link_name', models.CharField(max_length=255)),
                ('link_image', models.CharField(max_length=255)),
                ('link_target', models.CharField(max_length=25)),
                ('link_description', models.CharField(max_length=255)),
                ('link_visible', models.CharField(max_length=20)),
                ('link_owner', models.BigIntegerField()),
                ('link_rating', models.IntegerField()),
                ('link_updated', models.DateTimeField()),
                ('link_rel', models.CharField(max_length=255)),
                ('link_notes', models.TextField()),
                ('link_rss', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'wp_links',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpMymailActions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('subscriber_id', models.BigIntegerField()),
                ('campaign_id', models.BigIntegerField()),
                ('timestamp', models.IntegerField()),
                ('count', models.IntegerField()),
                ('type', models.IntegerField()),
                ('link_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wp_mymail_actions',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpMymailLinks',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True, db_column='ID')),
                ('link', models.CharField(max_length=2083)),
                ('i', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_mymail_links',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpMymailLists',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True, db_column='ID')),
                ('parent_id', models.BigIntegerField()),
                ('name', models.CharField(unique=True, max_length=255)),
                ('slug', models.CharField(unique=True, max_length=255)),
                ('description', models.TextField()),
                ('added', models.IntegerField()),
                ('updated', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_mymail_lists',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpMymailListsSubscribers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('list_id', models.BigIntegerField()),
                ('subscriber_id', models.BigIntegerField()),
                ('added', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_mymail_lists_subscribers',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpMymailQueue',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('subscriber_id', models.BigIntegerField()),
                ('campaign_id', models.BigIntegerField()),
                ('requeued', models.IntegerField()),
                ('added', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('sent', models.IntegerField()),
                ('priority', models.IntegerField()),
                ('count', models.IntegerField()),
                ('error', models.IntegerField()),
                ('ignore_status', models.IntegerField()),
                ('options', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'wp_mymail_queue',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpMymailSubscriberFields',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('subscriber_id', models.BigIntegerField()),
                ('meta_key', models.CharField(max_length=255)),
                ('meta_value', models.TextField()),
            ],
            options={
                'db_table': 'wp_mymail_subscriber_fields',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpMymailSubscriberMeta',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('subscriber_id', models.BigIntegerField()),
                ('campaign_id', models.BigIntegerField()),
                ('meta_key', models.CharField(max_length=255)),
                ('meta_value', models.TextField()),
            ],
            options={
                'db_table': 'wp_mymail_subscriber_meta',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpMymailSubscribers',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True, db_column='ID')),
                ('hash', models.CharField(unique=True, max_length=32)),
                ('email', models.CharField(unique=True, max_length=255)),
                ('wp_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('added', models.IntegerField()),
                ('updated', models.IntegerField()),
                ('signup', models.IntegerField()),
                ('confirm', models.IntegerField()),
                ('ip_signup', models.CharField(max_length=45)),
                ('ip_confirm', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'wp_mymail_subscribers',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpNxsLog',
            fields=[
                ('id', models.IntegerField(unique=True, serialize=False, primary_key=True)),
                ('date', models.DateTimeField()),
                ('act', models.CharField(max_length=255)),
                ('nt', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('msg', models.TextField()),
                ('extinfo', models.TextField(db_column='extInfo')),
            ],
            options={
                'db_table': 'wp_nxs_log',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpOptions',
            fields=[
                ('option_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('option_name', models.CharField(unique=True, max_length=64)),
                ('option_value', models.TextField()),
                ('autoload', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'wp_options',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpPostmeta',
            fields=[
                ('meta_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('post_id', models.BigIntegerField()),
                ('meta_key', models.CharField(max_length=255, blank=True)),
                ('meta_value', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'wp_postmeta',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpPosts',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True, db_column='ID')),
                ('post_author', models.BigIntegerField()),
                ('post_date', models.DateTimeField()),
                ('post_date_gmt', models.DateTimeField()),
                ('post_content', models.TextField()),
                ('post_title', models.TextField()),
                ('post_excerpt', models.TextField()),
                ('post_status', models.CharField(max_length=20)),
                ('comment_status', models.CharField(max_length=20)),
                ('ping_status', models.CharField(max_length=20)),
                ('post_password', models.CharField(max_length=20)),
                ('post_name', models.CharField(max_length=200)),
                ('to_ping', models.TextField()),
                ('pinged', models.TextField()),
                ('post_modified', models.DateTimeField()),
                ('post_modified_gmt', models.DateTimeField()),
                ('post_content_filtered', models.TextField()),
                ('post_parent', models.BigIntegerField()),
                ('guid', models.CharField(max_length=255)),
                ('menu_order', models.IntegerField()),
                ('post_type', models.CharField(max_length=20)),
                ('post_mime_type', models.CharField(max_length=100)),
                ('comment_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wp_posts',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRevsliderCss',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('handle', models.TextField()),
                ('settings', models.TextField(blank=True)),
                ('hover', models.TextField(blank=True)),
                ('params', models.TextField()),
            ],
            options={
                'db_table': 'wp_revslider_css',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRevsliderLayerAnimations',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('handle', models.TextField()),
                ('params', models.TextField()),
            ],
            options={
                'db_table': 'wp_revslider_layer_animations',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRevsliderSettings',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('general', models.TextField()),
                ('params', models.TextField()),
            ],
            options={
                'db_table': 'wp_revslider_settings',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRevsliderSliders',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('title', models.TextField()),
                ('alias', models.TextField(blank=True)),
                ('params', models.TextField()),
            ],
            options={
                'db_table': 'wp_revslider_sliders',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRevsliderSlides',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('slider_id', models.IntegerField()),
                ('slide_order', models.IntegerField()),
                ('params', models.TextField()),
                ('layers', models.TextField()),
            ],
            options={
                'db_table': 'wp_revslider_slides',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRevsliderStaticSlides',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('slider_id', models.IntegerField()),
                ('params', models.TextField()),
                ('layers', models.TextField()),
            ],
            options={
                'db_table': 'wp_revslider_static_slides',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRtRtmActivity',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('activity_id', models.BigIntegerField(null=True, blank=True)),
                ('user_id', models.BigIntegerField()),
                ('privacy', models.IntegerField(null=True, blank=True)),
                ('blog_id', models.BigIntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'wp_rt_rtm_activity',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRtRtmApi',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('user_id', models.BigIntegerField()),
                ('ip', models.CharField(max_length=255)),
                ('token_time', models.CharField(max_length=1000, blank=True)),
                ('token', models.CharField(max_length=1000, blank=True)),
                ('status', models.CharField(max_length=255, blank=True)),
                ('last_access', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'db_table': 'wp_rt_rtm_api',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRtRtmMedia',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('blog_id', models.BigIntegerField(null=True, blank=True)),
                ('media_id', models.BigIntegerField()),
                ('media_author', models.BigIntegerField()),
                ('media_title', models.TextField(blank=True)),
                ('album_id', models.BigIntegerField(null=True, blank=True)),
                ('media_type', models.CharField(max_length=100, blank=True)),
                ('context', models.CharField(max_length=100, blank=True)),
                ('context_id', models.BigIntegerField(null=True, blank=True)),
                ('source', models.CharField(max_length=100, blank=True)),
                ('source_id', models.BigIntegerField(null=True, blank=True)),
                ('activity_id', models.BigIntegerField(null=True, blank=True)),
                ('cover_art', models.CharField(max_length=250, blank=True)),
                ('privacy', models.IntegerField(null=True, blank=True)),
                ('views', models.BigIntegerField(null=True, blank=True)),
                ('downloads', models.BigIntegerField(null=True, blank=True)),
                ('ratings_total', models.BigIntegerField(null=True, blank=True)),
                ('ratings_count', models.BigIntegerField(null=True, blank=True)),
                ('ratings_average', models.DecimalField(null=True, max_digits=4, decimal_places=2, blank=True)),
                ('likes', models.BigIntegerField(null=True, blank=True)),
                ('dislikes', models.BigIntegerField(null=True, blank=True)),
                ('upload_date', models.DateTimeField(null=True, blank=True)),
                ('file_size', models.BigIntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'wp_rt_rtm_media',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRtRtmMediaInteraction',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('user_id', models.BigIntegerField()),
                ('media_id', models.BigIntegerField()),
                ('action', models.CharField(max_length=255, blank=True)),
                ('value', models.CharField(max_length=255, blank=True)),
                ('action_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'db_table': 'wp_rt_rtm_media_interaction',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpRtRtmMediaMeta',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('media_id', models.BigIntegerField()),
                ('meta_key', models.CharField(max_length=255, blank=True)),
                ('meta_value', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'wp_rt_rtm_media_meta',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpSignups',
            fields=[
                ('signup_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('domain', models.CharField(max_length=200)),
                ('path', models.CharField(max_length=100)),
                ('title', models.TextField()),
                ('user_login', models.CharField(max_length=60)),
                ('user_email', models.CharField(max_length=100)),
                ('registered', models.DateTimeField()),
                ('activated', models.DateTimeField()),
                ('active', models.IntegerField()),
                ('activation_key', models.CharField(max_length=50)),
                ('meta', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'wp_signups',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpTaxonomymeta',
            fields=[
                ('meta_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('taxonomy_id', models.BigIntegerField()),
                ('meta_key', models.CharField(max_length=255, blank=True)),
                ('meta_value', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'wp_taxonomymeta',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpTermRelationships',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('object_id', models.BigIntegerField()),
                ('term_taxonomy_id', models.BigIntegerField()),
                ('term_order', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_term_relationships',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpTerms',
            fields=[
                ('term_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
                ('term_group', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wp_terms',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpTermTaxonomy',
            fields=[
                ('term_taxonomy_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('term_id', models.BigIntegerField()),
                ('taxonomy', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('parent', models.BigIntegerField()),
                ('count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wp_term_taxonomy',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpUsermeta',
            fields=[
                ('umeta_id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('user_id', models.BigIntegerField()),
                ('meta_key', models.CharField(max_length=255, blank=True)),
                ('meta_value', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'wp_usermeta',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpUsers',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True, db_column='ID')),
                ('user_login', models.CharField(max_length=60)),
                ('user_pass', models.CharField(max_length=64)),
                ('user_nicename', models.CharField(max_length=50)),
                ('user_email', models.CharField(max_length=100)),
                ('user_url', models.CharField(max_length=100)),
                ('user_registered', models.DateTimeField()),
                ('user_activation_key', models.CharField(max_length=60)),
                ('user_status', models.IntegerField()),
                ('display_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'wp_users',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfbadleechers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('emin', models.IntegerField(db_column='eMin')),
                ('ip', models.IntegerField(db_column='IP')),
                ('hits', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_wfBadLeechers',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfblocks',
            fields=[
                ('ip', models.IntegerField(serialize=False, primary_key=True, db_column='IP')),
                ('blockedtime', models.BigIntegerField(db_column='blockedTime')),
                ('reason', models.CharField(max_length=255)),
                ('lastattempt', models.IntegerField(null=True, db_column='lastAttempt', blank=True)),
                ('blockedhits', models.IntegerField(null=True, db_column='blockedHits', blank=True)),
                ('wfsn', models.IntegerField(null=True, blank=True)),
                ('permanent', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'wp_wfBlocks',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfblocksadv',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('blocktype', models.CharField(max_length=2, db_column='blockType')),
                ('blockstring', models.CharField(max_length=255, db_column='blockString')),
                ('ctime', models.IntegerField()),
                ('reason', models.CharField(max_length=255)),
                ('totalblocked', models.IntegerField(null=True, db_column='totalBlocked', blank=True)),
                ('lastblocked', models.IntegerField(null=True, db_column='lastBlocked', blank=True)),
            ],
            options={
                'db_table': 'wp_wfBlocksAdv',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfconfig',
            fields=[
                ('name', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('val', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'wp_wfConfig',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfcrawlers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ip', models.IntegerField(db_column='IP')),
                ('patternsig', models.CharField(max_length=16, db_column='patternSig')),
                ('status', models.CharField(max_length=8)),
                ('lastupdate', models.IntegerField(db_column='lastUpdate')),
                ('ptr', models.CharField(max_length=255, db_column='PTR', blank=True)),
            ],
            options={
                'db_table': 'wp_wfCrawlers',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWffilemods',
            fields=[
                ('filenamemd5', models.CharField(max_length=16, serialize=False, primary_key=True, db_column='filenameMD5')),
                ('filename', models.CharField(max_length=1000)),
                ('knownfile', models.IntegerField(db_column='knownFile')),
                ('oldmd5', models.CharField(max_length=16, db_column='oldMD5')),
                ('newmd5', models.CharField(max_length=16, db_column='newMD5')),
            ],
            options={
                'db_table': 'wp_wfFileMods',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfhits',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('ctime', models.FloatField()),
                ('ip', models.IntegerField(db_column='IP')),
                ('jsrun', models.IntegerField(null=True, db_column='jsRun', blank=True)),
                ('is404', models.IntegerField()),
                ('isgoogle', models.IntegerField(db_column='isGoogle')),
                ('userid', models.IntegerField(db_column='userID')),
                ('newvisit', models.IntegerField(db_column='newVisit')),
                ('url', models.TextField(db_column='URL', blank=True)),
                ('referer', models.TextField(blank=True)),
                ('ua', models.TextField(db_column='UA', blank=True)),
            ],
            options={
                'db_table': 'wp_wfHits',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfhoover',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('owner', models.TextField(blank=True)),
                ('host', models.TextField(blank=True)),
                ('path', models.TextField(blank=True)),
                ('hostkey', models.CharField(max_length=4, db_column='hostKey', blank=True)),
            ],
            options={
                'db_table': 'wp_wfHoover',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfissues',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('time', models.IntegerField()),
                ('status', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=20)),
                ('severity', models.IntegerField()),
                ('ignorep', models.CharField(max_length=32, db_column='ignoreP')),
                ('ignorec', models.CharField(max_length=32, db_column='ignoreC')),
                ('shortmsg', models.CharField(max_length=255, db_column='shortMsg')),
                ('longmsg', models.TextField(db_column='longMsg', blank=True)),
                ('data', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'wp_wfIssues',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfleechers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('emin', models.IntegerField(db_column='eMin')),
                ('ip', models.IntegerField(db_column='IP')),
                ('hits', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_wfLeechers',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWflockedout',
            fields=[
                ('ip', models.IntegerField(serialize=False, primary_key=True, db_column='IP')),
                ('blockedtime', models.BigIntegerField(db_column='blockedTime')),
                ('reason', models.CharField(max_length=255)),
                ('lastattempt', models.IntegerField(null=True, db_column='lastAttempt', blank=True)),
                ('blockedhits', models.IntegerField(null=True, db_column='blockedHits', blank=True)),
            ],
            options={
                'db_table': 'wp_wfLockedOut',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWflocs',
            fields=[
                ('ip', models.IntegerField(serialize=False, primary_key=True, db_column='IP')),
                ('ctime', models.IntegerField()),
                ('failed', models.IntegerField()),
                ('city', models.CharField(max_length=255, blank=True)),
                ('region', models.CharField(max_length=255, blank=True)),
                ('countryname', models.CharField(max_length=255, db_column='countryName', blank=True)),
                ('countrycode', models.CharField(max_length=2, db_column='countryCode', blank=True)),
                ('lat', models.FloatField(null=True, blank=True)),
                ('lon', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'wp_wfLocs',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWflogins',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('ctime', models.FloatField()),
                ('fail', models.IntegerField()),
                ('action', models.CharField(max_length=40)),
                ('username', models.CharField(max_length=255)),
                ('userid', models.IntegerField(db_column='userID')),
                ('ip', models.IntegerField(db_column='IP')),
                ('ua', models.TextField(db_column='UA', blank=True)),
            ],
            options={
                'db_table': 'wp_wfLogins',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfnet404S',
            fields=[
                ('sig', models.CharField(max_length=16, serialize=False, primary_key=True)),
                ('ctime', models.IntegerField()),
                ('uri', models.CharField(max_length=1000, db_column='URI')),
            ],
            options={
                'db_table': 'wp_wfNet404s',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfreversecache',
            fields=[
                ('ip', models.IntegerField(serialize=False, primary_key=True, db_column='IP')),
                ('host', models.CharField(max_length=255)),
                ('lastupdate', models.IntegerField(db_column='lastUpdate')),
            ],
            options={
                'db_table': 'wp_wfReverseCache',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfscanners',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('emin', models.IntegerField(db_column='eMin')),
                ('ip', models.IntegerField(db_column='IP')),
                ('hits', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_wfScanners',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfstatus',
            fields=[
                ('ctime', models.FloatField()),
                ('level', models.IntegerField()),
                ('type', models.CharField(max_length=5)),
                ('msg', models.CharField(max_length=1000)),
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
            ],
            options={
                'db_table': 'wp_wfStatus',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfthrottlelog',
            fields=[
                ('ip', models.IntegerField(serialize=False, primary_key=True, db_column='IP')),
                ('starttime', models.IntegerField(db_column='startTime')),
                ('endtime', models.IntegerField(db_column='endTime')),
                ('timesthrottled', models.IntegerField(db_column='timesThrottled')),
                ('lastreason', models.CharField(max_length=255, db_column='lastReason')),
            ],
            options={
                'db_table': 'wp_wfThrottleLog',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WpWfvulnscanners',
            fields=[
                ('ip', models.IntegerField(serialize=False, primary_key=True, db_column='IP')),
                ('ctime', models.IntegerField()),
                ('hits', models.IntegerField()),
            ],
            options={
                'db_table': 'wp_wfVulnScanners',
                'managed': False,
            },
            bases=(models.Model,),
        ),
    ]
